 -- Testing Jacobi diagonalization -- 
A = 
 [[ -5.   9.  -4.  10.]
 [  9.  -1.   3.   9.]
 [ -4.   3.  -6.   2.]
 [ 10.   9.   2.   3.]]

Number of rotations used =  112

Eigenvalues of A :
d = 
 [-15.78795896  -8.14737458  -3.158446    18.09377954]

Eigenvectors of A:
V = 
 [[ 0.74330066  0.15412951 -0.4201111   0.4972473 ]
 [-0.39157195  0.7001518   0.22068228  0.55475959]
 [ 0.47665734 -0.04296821  0.87704351  0.04178739]
 [-0.25879202 -0.69583424  0.07483763  0.66576327]]

Orthogonality of eigenvectors:
V_0 * V_0 = 1.0
V_0 * V_1 = -3.60822483003e-16
V_0 * V_2 = -4.30211422042e-16
V_0 * V_3 = -3.33066907388e-16
V_1 * V_0 = -3.60822483003e-16
V_1 * V_1 = 1.0
V_1 * V_2 = 1.38777878078e-16
V_1 * V_3 = -2.77555756156e-16
V_2 * V_0 = -4.30211422042e-16
V_2 * V_1 = 1.38777878078e-16
V_2 * V_2 = 1.0
V_2 * V_3 = 5.27355936697e-16
V_3 * V_0 = -3.33066907388e-16
V_3 * V_1 = -2.77555756156e-16
V_3 * V_2 = 5.27355936697e-16
V_3 * V_3 = 1.0

Check of eigenvalues and -vectors:
A * V_0 =
 [-11.7352004    6.1821218   -7.5254466    4.08579774]
d_0 * V_0=
 [-11.73520038   6.18212185  -7.5254466    4.08579775]
A * V_1 =
 [-1.25575092 -5.70439892  0.35007812  5.66922221]
d_1 * V_1=
 [-1.25575089 -5.70439896  0.3500781   5.66922217]
A * V_2 =
 [ 1.32689824 -0.69701302 -2.77009458 -0.23637063]
d_2 * V_2=
 [ 1.32689823 -0.69701305 -2.77009457 -0.2363706 ]
A * V_3 =
 [  8.99708298  10.03769773   0.75609178  12.04617389]
d_3 * V_3=
 [  8.99708301  10.03769769   0.7560918   12.0461739 ]

Check of diagonalization:
V^T A V =
[[ -1.57879590e+01  -3.34646599e-08  -5.11208220e-09  -3.66188724e-08]
 [ -3.34646606e-08  -8.14737458e+00   4.23927651e-08   3.69358304e-08]
 [ -5.11208094e-09   4.23927650e-08  -3.15844600e+00  -4.16333634e-16]
 [ -3.66188706e-08   3.69358304e-08  -2.22044605e-16   1.80937795e+01]]
